@page "/colaboradores/{AgenciaId}"
@inject ColaboradorAPI colaboradorAPI
@inject ISnackbar Snackbar

@inject TitleService TitleService

<PageTitle>Colaboradores</PageTitle>

<MudPaper Class="px-8 pt-2 pb-4 mx-8 my-6" Justify="Justify.Center">

    <MudDataGrid Items="@colaboradores" Filterable="false" SortMode="@SortMode.None" Class="mt-6" Groupable="false">
        <Columns>
            <PropertyColumn Property="x => x.Nome" Title="Nome Completo" />
            <PropertyColumn Property="x => x.RG" Title="RG" />
            <PropertyColumn Property="x => x.CPF" Title="CPF" />
            <PropertyColumn Property="x => x.Cargo.Descricao" Title="Cargo" />
            <PropertyColumn Property="x => x.DataAdmissao" Title="Data Admissão" />
            <PropertyColumn Property="x => x.Ativo"/>
            <PropertyColumn Property="x => x.Usuario.UserName" Title="Usuário de acesso" />

            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate Context="cellContext">
                    @{
                        var colaborador = cellContext.Item;
                    }
                    <MudStack Row>
                        <MudButton  Size="@Size.Small" 
                                    Variant="@Variant.Filled" 
                                    Color="@Color.Info"
                                    Href=@($"/EditarColaborador/{colaborador.Id}")
                                    StartIcon="@Icons.Material.Filled.Edit">
                         Ficha Completa
                         </MudButton>
                       
                        <MudButton Size="@Size.Small" 
                                   Variant="@Variant.Filled" 
                                   Color="@Color.Error" 
                                   OnClick="() => Remover(colaborador)"
                                   StartIcon="@Icons.Material.Filled.Delete">
                         Remover
                        </MudButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
   
    <MudButton Variant="Variant.Filled"
                Size="Size.Large"
                Href=@($"/CadastrarColaborador/{AgenciaId}")
                Color="Color.Primary"
                Class="ml-auto mt-4 mr-2 justify-end">
        <MudIcon Icon="@Icons.Material.Filled.Person" Class="mr-2"/>
        Contratar
    </MudButton>
</MudPaper>

@code {
    [Parameter]
    public string? AgenciaId { get; set; }

    private ICollection<ColaboradorResponse>? colaboradores;

    protected override async Task OnInitializedAsync()
    {
        TitleService.SetTitle("Colaboradores da Agência");
        await CarregarColaboradores();
    }

    private async Task CarregarColaboradores()
    {
        colaboradores = await colaboradorAPI.GetColaboradoresAsync();

        if (colaboradores is not null) colaboradores = colaboradores.Where(c => c.Agencia.Id == Convert.ToInt32(AgenciaId)).OrderByDescending(c => c.Ativo).ToList();
    }

    private async Task Remover(ColaboradorResponse colaborador)
    {
        if(colaborador is not null)
        {
            if (await colaboradorAPI.DeleteColaboradorAsync(colaborador.Id))
            {
                Snackbar.Add("Colaborador removido com sucesso!", Severity.Success);
                await CarregarColaboradores();
            }
            else
            {
                Snackbar.Add("Houve um erro durante a exclusão do colaborador, por favor tente mais tarde!", Severity.Error);
            }
        }
    }
}
